#!/usr/bin/env python
import sys
import os

# Hack in order to avoid making this a python package
sys.path.append(os.path.dirname(
    os.path.abspath(sys.argv[0])) + os.sep + os.pardir + os.sep + "src")

import argparse
from pylab import *



def visualize(algo, epsilon_min, epsilon_max, epsilon_0):
    points = [[44, 95], [26, 91], [22, 90], [21, 90],
            [19, 89], [17, 89], [15, 87], [15, 86], [16, 85],
            [20, 83], [26, 81], [28, 80], [30, 79], [32, 74],
            [32, 72], [33, 71], [34, 70], [38, 68], [43, 66],
            [49, 64], [52, 63], [52, 62], [53, 59], [54, 57],
            [56, 56], [57, 56], [58, 56], [59, 56], [60, 56],
            [61, 55], [61, 55], [63, 55], [64, 55], [65, 54],
            [67, 54], [68, 54], [76, 53], [82, 52], [84, 52],
            [87, 51], [91, 51], [93, 51], [95, 51], [98, 50],
            [105, 50], [113, 49], [120, 48], [127, 48], [131, 47],
            [134, 47], [137, 47], [139, 47], [140, 47], [142, 47],
            [145, 46], [148, 46], [152, 46], [154, 46], [155, 46],
            [159, 46], [160, 46], [165, 46], [168, 46], [169, 45],
            [171, 45], [173, 45], [176, 45], [182, 45], [190, 44],
            [204, 43], [204, 43], [207, 43], [215, 40], [215, 38],
            [215, 37], [200, 37], [195, 41]]

    ax = subplot(111)
    subplots_adjust(left=0.15, bottom=0.25)

    line, = plot(zip(*points)[0], zip(*points)[1], 'ro-')
    line2, = plot(None, None, 'go--')

    grid(True)
    title(algo)

    axslider = axes([0.15, 0.1, 0.65, 0.03])
    slider = Slider(axslider, 'Epsilon', epsilon_min, epsilon_max, valinit=epsilon_0)

    def update(val):
        points2 = algo(points, slider.val)
        line2.set_xdata(zip(*points2)[0])
        line2.set_ydata(zip(*points2)[1])

        legend([line, line2], ["Original Route (# %s)" % len(points), 
            "Generalized Route (# %s)" % len(points2)], bbox_to_anchor=(1.05,4))

        draw()

    slider.on_changed(update)
    update(epsilon_0)

    show()


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Algorithm Visualization")
    parser.add_argument("algorithm", type=str)
    args = parser.parse_args()
    print args.algorithm

    if args.algorithm == "rdp":
        from rdp import rdp
        visualize(rdp, 0, 4, 0)
    elif args.algorithm == "anglered":
        from anglered import anglereduce
        visualize(anglereduce, 0, 180, 180)
