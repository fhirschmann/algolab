#!/usr/bin/env python
import sys
import os
import logging
logging.basicConfig(level=logging.INFO)

# Hack in order to avoid making this a python package
sys.path.append(os.path.dirname(
    os.path.abspath(sys.argv[0])) + os.sep + os.pardir + os.sep + "algolab")

from pymongo import Connection

from algolab.anglered import anglereduce
from algolab.rdp import rdp
from algolab.segment import segment
from algolab.db import create_rg, loc_for_mult


def log(zoom, msg, points=None):
    logging.info("[zoom=%i] %s %s" % (zoom, msg,
        ("[%s]" % points) if points is not None else ""))


if __name__ == "__main__":
    rg = Connection("127.0.0.1", 27017)["osm-data"]["railway_graph"]
    rg0 = Connection("127.0.0.1", 27017)["osm-data"]["railway_graph_0"]
    rg16 = Connection("127.0.0.1", 27017)["osm-data"]["railway_graph_16"]
    rg0.drop()

    log(-1, "Loaded Railway Graph", rg.count())

    # remove all unnecessary points (points on a straight line)
    for seg in segment(rg):
        sloc = loc_for_mult(seg, rg)
        # Please note that anglereduce(x, 180) and rdp(x, 0) should yield
        # the same result.
        create_rg(anglereduce(sloc, 180), rg0)

    log(16, "Removed unnecessary points that are on a straight line", rg0.count())

    for i in reversed(xrange(8, 16)):
        if i == 15:
            for seg in segment(rg0):
                sloc = loc_for_mult(seg, rg0)
                create_rg(rdp(sloc, 2), rg16)
            log(15, "Applied RDP with epsilon=%i" % 2, rg16.count())
